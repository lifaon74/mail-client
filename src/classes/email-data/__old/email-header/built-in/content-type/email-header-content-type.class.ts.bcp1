import { IEmailHeaderContentTypeKey, EMAIL_HEADER_CONTENT_TYPE_KEY } from './email-header-content-type-key.contant';
import { EmailHeader } from '../../email-header.class';
import { MimeTypeClass } from '../../../../mime-type/mime-type.class';

export class EmailHeaderContentType extends EmailHeader<IEmailHeaderContentTypeKey> {

  #mimeType!: MimeTypeClass;

  constructor(
    mimeType: MimeTypeClass | string,
  ) {
    super(EMAIL_HEADER_CONTENT_TYPE_KEY, '');

    if (typeof mimeType === 'string') {
      this.value = mimeType;
    } else {
      this.mimeType = mimeType;
    }
  }

  override get value(): string {
    return this.#mimeType.toString();
  }

  override set value(
    value: string,
  ) {
    this.#mimeType = MimeTypeClass.parse(value);
  }

  get mimeType(): MimeTypeClass {
    return this.#mimeType;
  }

  set mimeType(
    mimeType: MimeTypeClass,
  ) {
    this.#mimeType = mimeType;
  }
}
